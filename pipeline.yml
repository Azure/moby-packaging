parameters:
  - name: arch
    displayName: arch
    type: string
    default: amd64
  - name: os
    displayName: os
    type: string
    default: ""
  - name: commit
    displayName: commit
    type: string
    default: ""
  - name: distro
    displayName: distro
    type: string
    default: ""
  - name: github_repo
    displayName: github_repo
    type: string
    default: ""
  - name: package_name
    displayName: package_name
    type: string
    default: ""
  - name: pmc_repo
    displayName: pmc_repo
    type: string
    default: ""
  - name: release_main
    displayName: release_main
    type: boolean
    default: False
  - name: release_testing
    displayName: release_testing
    type: boolean
    default: False
  - name: tag
    displayName: tag
    type: string
    default: ""
  - name: revision
    displayName: revision
    type: string
    default: "1"

name: ${{ parameters.package_name }}-${{ parameters.distro }}-${{ replace(parameters.arch, '/', '') }}


variables:
  ${{ if contains(parameters.arch, 'arm') }}:
    build.pool: staging-pool-arm64-mariner-2
  ${{ else }}:
    build.pool: staging-pool-amd64-mariner-2

stages:
  - stage: Build
    jobs:
      - job: Build_${{ replace(parameters.package_name, '-', '_') }}_${{ parameters.distro }}_${{ replace(parameters.arch, '/', '') }}
        pool: $(build.pool)
        timeoutInMinutes: 240
        steps:
          - bash: |
              set -x

              bundle_dir="$(Pipeline.Workspace)/bundles"
              bundle_distro_dir="$bundle_dir/${{ parameters.distro }}"
              mkdir -p "$bundle_distro_dir"
              spec_file="$bundle_distro_dir/spec.json"

              printf '
                {
                  "arch": "${{ parameters.arch }}",
                  "commit": "${{ parameters.commit }}",
                  "repo": "https://github.com/${{ parameters.github_repo }}.git",
                  "package": "${{ parameters.package_name }}",
                  "distro": "${{ parameters.distro }}",
                  "tag": "${{ parameters.tag }}",
                  "revision": "${{ coalesce(parameters.revision, '1') }}"
                }
              ' > $spec_file

              go run . --build-spec="$spec_file" --output="$bundle_dir"
          - script: |
              set -o xtrace
              : ${BLOB_PREFIX:=/}
              cd "${ARTIFACTS_DIR}"

              az login --identity
              az storage container create -n "${STORAGE_ACCOUNT_CONTAINER}" --auth-mode=login

              az storage blob upload-batch \
                --max-connections=10 --auth-mode=login \
                --overwrite \
                --source ${{ parameters.package_name }}/${{ parameters.distro }} \
                --pattern "${{ parameters.package_name }}*" \
                --destination "${STORAGE_ACCOUNT_CONTAINER}" \
                --destination-path "${{ parameters.package_name }}/${{ parameters.tag }}/${{ parameters.distro }}"
            displayName: Upload to blob store
            env:
              ARTIFACTS_DIR: "$(Pipeline.Workspace)/bundles"
              STORAGE_ACCOUNT_NAME: moby
              STORAGE_ACCOUNT_CONTAINER: moby
              AZURE_STORAGE_ACCOUNT: moby
              VERSION: ${{ parameters.tag }}
