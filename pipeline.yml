parameters:
  - name: os
    displayName: os
    type: string
    default: linux
  - name: arch
    displayName: arch
    type: string
    default: amd64
  - name: commit
    displayName: commit
    type: string
    default: ""
  - name: distro
    displayName: distro
    type: string
    default: ""
  - name: github_repo
    displayName: github_repo
    type: string
    default: ""
  - name: package_name
    displayName: package_name
    type: string
    default: ""
  - name: pmc_repo
    displayName: pmc_repo
    type: string
    default: ""
  - name: release_main
    displayName: release_main
    type: boolean
    default: False
  - name: release_testing
    displayName: release_testing
    type: boolean
    default: False
  - name: tag
    displayName: tag
    type: string
    default: ""
  - name: revision
    displayName: revision
    type: string
    default: "1"

variables:
  ${{ if contains(parameters.arch, 'arm') }}:
    build.pool: staging-pool-arm64-mariner-2
  ${{ else }}:
    build.pool: staging-pool-amd64-mariner-2

stages:
  - stage: Build
    jobs:
      - job: Build_${{ replace(parameters.package_name, '-', '_') }}_${{ parameters.distro }}_${{ replace(parameters.arch, '/', '') }}
        pool: $(build.pool)
        timeoutInMinutes: 240
        steps:
          - script: |
              mkdir -p "${PIPELINE_WORKSPACE}/bundles" && echo "${{ parameters.tag }}" > "${PIPELINE_WORKSPACE}/bundles/VERSION"
            displayName: Set up output directory
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: "$(Pipeline.Workspace)/bundles"
              artifactName: packages
          - bash: |
              set -x
              printf '
                {
                  "arch": "${{ parameters.arch }}",
                  "commit": "${{ parameters.commit }}",
                  "repo": "https://github.com/${{ parameters.github_repo }}.git",
                  "package": "${{ parameters.package_name }}",
                  "distro": "${{ parameters.distro }}",
                  "tag": "${{ parameters.tag }}",
                  "os": "${{ parameters.os }}",
                  "revision": "${{ coalesce(parameters.revision, '1') }}"
                }
              ' | go run packaging \
                    --build-spec=/dev/stdin \
                    --out-dir="{PIPELINE_WORKSPACE}/bundles"

              printf "WORKSPACE/BUNDLES: "
              ls "${PIPELINE_WORKSPACE}/bundles" -a
              printf "THIS DIR: "
              ls -a
            displayName: Dagger build
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: "$(Pipeline.Workspace)/bundles"
              artifactName: packages
          - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
            displayName: Generate SBOM
            inputs:
              BuildDropPath: $(Pipeline.Workspace)/bundles/${{ parameters.distro }}
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: "$(Pipeline.Workspace)/bundles"
              artifactName: packages
