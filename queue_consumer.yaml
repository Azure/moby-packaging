parameters:
  - name: num_messages
    displayName: number of messages to process
    type: string
    default: "30"
  - name: build_id
    displayName: build id
    type: string
    default: "__not_supplied"

name: ${{ replace(parameters.build_id, '__not_supplied', '$(Date:yyyyMMdd)') }}.$(Rev:r)

variables:
  build.pool: staging-pool-amd64-mariner-2

stages:
  - stage: ReadQueue
    jobs:
      - job: Pull_Messages
        pool: $(build.pool)
        steps:
          - bash: |
              set -exu
              mkdir "$MSG_DIR"
              az login --identity
              az storage message get \
                --auth-mode login \
                --account-name moby \
                --queue-name moby-packaging-signing-and-publishing \
                --num-messages "$NUM_MESSAGES" |
                tee "$MSG_DIR/message"
            env:
              NUM_MESSAGES: "${{ parameters.num_messages }}"
              MSG_DIR: "$(Pipeline.Workspace)/messages"
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: "$(Pipeline.Workspace)/messages"
              artifactName: messages
  - stage: FetchPackages
    jobs:
      - job: Read_Queue
        pool: production-pool-amd64-mariner-2
        steps:
          - download: current
            artifact: messages
          - bash: |
              set -exu
              # downloads all packages, puts them in out-dir, logs successful downloads to stdout (put in 'downloaded' file)
              go run ./cmd/pop download --out-dir="$OUT_DIR" --messages-file="$MSG_DIR/message" | tee "$MSG_DIR/downloaded"
            env:
              MSG_DIR: "$(Pipeline.Workspace)/messages"
              OUT_DIR: "$(Pipeline.Workspace)/signed"
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: "$(Pipeline.Workspace)/messages"
              artifactName: messages
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: "$(Pipeline.Workspace)/signed"
              artifactName: signed
  # - stage: Sign
  #   jobs:
  #     - job: SignPackages
  #       pool: production-pool-amd64-mariner-2
  #       steps:
  #         - download: current
  #           artifact: messages
  #         - bash: |
  #             set -exu
  #             # downloads all packages, puts them in out-dir, logs successful downloads to stdout (put in 'downloaded' file)
  #             mkdir -vp "$MSG_DIR"
  #             go run ./cmd/pop download --out-dir="$OUT_DIR" --messages-file="$MSG_DIR/message" | tee "$MSG_DIR/downloaded"
  #           env:
  #             MSG_DIR: "$(Pipeline.Workspace)/messages"
  #             OUT_DIR: "$(Pipeline.Workspace)/signed"
          # sign script
          # - bash: |
          #     # uploads signed packages, logs successful uploads to stdout (put in 'success' file)
          #     go run ./cmd/pop upload --in-dir="$IN_DIR" --messages-file="$MSG_DIR/downloaded" | tee "$MSG_DIR/success"
          #   env:
          #     IN_DIR: "$(Pipeline.Workspace)/signed"
          # - task: PublishBuildArtifacts@1
          #   inputs:
          #     pathToPublish: "$(Pipeline.Workspace)/messages"
          #     artifactName: messages
  # - stage: Clean Queue
  #   jobs:
  #     - job: Read Queue
  #       pool: $(build.pool)
  #       steps:
  #         - download: current
  #           artifact: messages
  #         - bash: |
  #             go run ./cmd/pop delete --messages-file="$MSG_DIR/success"
  #           env:
  #             MSG_DIR: "$(Pipeline.Workspace)/messages"
